plugins {
    id 'java'
    id "io.spring.dependency-management" version "1.1.0"
    id "org.springframework.boot" version "2.7.18"
    id 'maven-publish'
    id 'signing'
    id "com.github.jruby-gradle.base" version "2.1.0-alpha.2"
}

group 'no.datek'
version '0.19.1'
final String JRUBY_VERSION = '9.4.6.0';

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.6'
    implementation 'javax.servlet:javax.servlet-api:3.1.0'
    implementation "org.jruby:jruby:$JRUBY_VERSION"
}

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

publishing {
    repositories {
        maven {
            def releaseRepo = "https://s01.oss.sonatype.org/content/repositories/releases/"
            def snapshotRepo = "https://s01.oss.sonatype.org/content/repositories/snapshots/"

            name = "OSSRH"
            url = isReleaseVersion ? releaseRepo : snapshotRepo

            credentials {
                username = findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = 'no.datek'
            from components.java

            pom {
                name = 'slim-spring-webmvc'
                description = 'Add https://github.com/slim-template/slim as a template engine to Spring WebMVC.'
                url = 'https://github.com/DatekWireless/slim-spring-webmvc'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://mit-license.org/'
                    }
                }

                scm {
                    url = 'https://github.com/DatekWireless/slim-spring-webmvc'
                    connection = 'scm:git://github.com:DatekWireless/slim-spring-webmvc.git'
                    developerConnection = 'scm:git://github.com:DatekWireless/slim-spring-webmvc.git'
                }

                developers {
                    developer {
                        id = 'UweKubosch'
                        name = 'Uwe Kubosch'
                        email = 'uwe@datek.no'
                        organizationUrl = 'https://datek.no/'
                    }
                }
            }
        }
    }
}

import com.github.jrubygradle.JRubyExec

tasks.register('installGems', JRubyExec) {
    group 'gems'
    description "Install gems"
    script "${projectDir}/bin/bundle"
    scriptArgs 'install'
    finalizedBy 'copyGems'
    jvmArgs '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED', '--add-opens=java.base/java.io=ALL-UNNAMED'
}

tasks.register('updateGems', JRubyExec) {
    group 'gems'
    description "Update gems"
    script "${projectDir}/bin/bundle"
    scriptArgs 'update'
    finalizedBy 'cleanGems', 'copyGems'
    jvmArgs '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED', '--add-opens=java.base/java.io=ALL-UNNAMED'
}

tasks.register('cleanGems', JRubyExec) {
    group 'gems'
    description "Clean gems"
    script "${projectDir}/bin/bundle"
    scriptArgs 'clean', '--force'
    jvmArgs '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED', '--add-opens=java.base/java.io=ALL-UNNAMED'
}

tasks.register('copyGems', Sync) {
    group 'gems'
    description 'Copies gems from vendor/bundle to src/main/resources/gems'
    mustRunAfter 'cleanGems'
    from "build/.gems/gems"
    include "*/lib/**/*"
    includeEmptyDirs = false
    into("src/main/resources/gems")
    eachFile { fcd -> fcd.relativePath = new RelativePath(true, fcd.relativePath.segments.drop(2)) }
}

jruby { jrubyVersion JRUBY_VERSION }
